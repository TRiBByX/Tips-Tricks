<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-11-11T20:52:54+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Tribbyx’s guides, tips, tricks and other black magic</title><entry><title type="html">Windows and Linux command cheat sheets</title><link href="http://localhost:4000/cheat/sheet/2019/11/11/Windows-and-Linux-command-cheat-sheets.html" rel="alternate" type="text/html" title="Windows and Linux command cheat sheets" /><published>2019-11-11T11:30:00+01:00</published><updated>2019-11-11T11:30:00+01:00</updated><id>http://localhost:4000/cheat/sheet/2019/11/11/Windows-and-Linux-command-cheat-sheets</id><content type="html" xml:base="http://localhost:4000/cheat/sheet/2019/11/11/Windows-and-Linux-command-cheat-sheets.html">&lt;h1 id=&quot;various-cheatsheets&quot;&gt;Various cheatsheets&lt;/h1&gt;

&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;
&lt;p&gt;These cheatsheets are not exhaustive and don’t partain to anything specific, just commands and tools i have found useful or nice to know over the years. Some i have used extensivly and other not so much. Writing them down have been a good decision though.&lt;/p&gt;

&lt;p&gt;These will be maintained and updated as new stuff comes along.&lt;/p&gt;

&lt;h2 id=&quot;-how-to-read-&quot;&gt; How to read &lt;/h2&gt;

&lt;p&gt;Basically it’s very simple, the command is on the left and the description or explanation is on the right. Anything with _ around it, like &lt;code class=&quot;highlighter-rouge&quot;&gt;_word_&lt;/code&gt;, means it is a user input.&lt;/p&gt;

&lt;h2 id=&quot;bash&quot;&gt;Bash&lt;/h2&gt;

&lt;h3 id=&quot;tips&quot;&gt;Tips&lt;/h3&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Set aliases for commands like having &lt;code class=&quot;highlighter-rouge&quot;&gt;ll&lt;/code&gt; mean &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -lahrt&lt;/code&gt; or the like. This is edited in the .bashrc. add the following: &lt;code class=&quot;highlighter-rouge&quot;&gt;alias _alias_='_command_'&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Need line numbers in vim? Append &lt;code class=&quot;highlighter-rouge&quot;&gt;set num&lt;/code&gt; to the .vimrc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commands&quot;&gt;Commands&lt;/h3&gt;
&lt;hr /&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Command&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;netstat -lntp&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Shows running ports and what’s listening on them.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find -name 'filename' xargs rm&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Delete any file with a specific name.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tree -a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Requires Tree&lt;/strong&gt;. Display a tree structure of a folder.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mv _origin_foldername_/* _targetfolder_/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Move folder and subfolder (only subfolder non-recursive) to target folder.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l -lahrt&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; use a long listing format, &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; don’t ignore entries starting with ‘.’, &lt;code class=&quot;highlighter-rouge&quot;&gt;-h&lt;/code&gt; human readable, &lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; reverse order while sorting, &lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; sort by newest.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;virtualenv -p python _name of env_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a python virtual environment for testing and isolation.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ps -aux | less&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;List running services into less for readability.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;watch -n 0.5 'ps -aux'&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Watch running services at an interval of 0.5 seconds.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;curl ipinfo.ip/ip&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find external ip address.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat _filename_ | less&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Print file contents and pipe into Less for readability.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dpkg -i _filename_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;install .deb files&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iperf -s&lt;/code&gt; &amp;amp;  &lt;code class=&quot;highlighter-rouge&quot;&gt;iperf -c _ip_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;To check connection between two machines. &lt;code class=&quot;highlighter-rouge&quot;&gt;-s&lt;/code&gt; is for the server, is to connect to the server.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sed -i 's/\&amp;lt;_orig_string\&amp;gt;/_new_string_' _path_to_file_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Replace original string with a new string in a file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scp _filename_ _user_@_ip/hostname_:_host_directory_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Copies a file between a host machine and remote machine. Ex. &lt;code class=&quot;highlighter-rouge&quot;&gt;scp c:\users\user\file.txt root@127.0.0.1:usr/users/home&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;watch -n _time_ '_command_'&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;See output of &lt;code class=&quot;highlighter-rouge&quot;&gt;_command_&lt;/code&gt; updated every &lt;code class=&quot;highlighter-rouge&quot;&gt;_time_&lt;/code&gt; seconds&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;watch -n 0.5 'netstat -nat grep -v -i listen&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;See live tcp connections excluding ones that are listening&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump -w _filename_.pcap&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Capture a .pcap dump of local traffic.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh -L _remote_port_:_localhost_:_localport_ _user_@_ip/hostname_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Reverse port, like port forwarding.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df -h&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;See diskspace. &lt;code class=&quot;highlighter-rouge&quot;&gt;-h&lt;/code&gt; makes it human readable.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Check ressource usage. Press 1 to see per core usage.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat /etc/*release&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Check distro.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;windows-&quot;&gt;Windows &lt;/h2&gt;

&lt;h3 id=&quot;tips-&quot;&gt;Tips &lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;win + ctrl + b&lt;/code&gt; restarts the graphics driver on windows.
    &lt;h3 id=&quot;commands-1&quot;&gt;Commands&lt;/h3&gt;
    &lt;h4 id=&quot;cmd&quot;&gt;CMD&lt;/h4&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Command&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;psftp _putty_sessions_name_&lt;/code&gt; then &lt;code class=&quot;highlighter-rouge&quot;&gt;put _filename_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;REQUIRES PUTTY&lt;/strong&gt;. Opens a psftp shell and put means to transfer the file through the putty session.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;netstat -an | find /i &quot;port|listening|esbalished|etc&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Like netstat in linux. Find specifies what you are looking for. &lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; makes in case insesitive.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;powershell&quot;&gt;Powershell&lt;/h4&gt;
&lt;p&gt;Nothing to see here… yet!&lt;/p&gt;</content><author><name></name></author><summary type="html">Various cheatsheets Preface These cheatsheets are not exhaustive and don’t partain to anything specific, just commands and tools i have found useful or nice to know over the years. Some i have used extensivly and other not so much. Writing them down have been a good decision though. These will be maintained and updated as new stuff comes along. How to read Basically it’s very simple, the command is on the left and the description or explanation is on the right. Anything with _ around it, like _word_, means it is a user input. Bash Tips Set aliases for commands like having ll mean ls -lahrt or the like. This is edited in the .bashrc. add the following: alias _alias_='_command_' Need line numbers in vim? Append set num to the .vimrc. Commands Command Description netstat -lntp Shows running ports and what’s listening on them. find -name 'filename' xargs rm Delete any file with a specific name. tree -a Requires Tree. Display a tree structure of a folder. mv _origin_foldername_/* _targetfolder_/ Move folder and subfolder (only subfolder non-recursive) to target folder. l -lahrt -l use a long listing format, -a don’t ignore entries starting with ‘.’, -h human readable, -r reverse order while sorting, -t sort by newest. virtualenv -p python _name of env_ Create a python virtual environment for testing and isolation. ps -aux | less List running services into less for readability. watch -n 0.5 'ps -aux' Watch running services at an interval of 0.5 seconds. curl ipinfo.ip/ip Find external ip address. cat _filename_ | less Print file contents and pipe into Less for readability. sudo dpkg -i _filename_ install .deb files iperf -s &amp;amp; iperf -c _ip_ To check connection between two machines. -s is for the server, is to connect to the server. sed -i 's/\&amp;lt;_orig_string\&amp;gt;/_new_string_' _path_to_file_ Replace original string with a new string in a file. scp _filename_ _user_@_ip/hostname_:_host_directory_ Copies a file between a host machine and remote machine. Ex. scp c:\users\user\file.txt root@127.0.0.1:usr/users/home watch -n _time_ '_command_' See output of _command_ updated every _time_ seconds watch -n 0.5 'netstat -nat grep -v -i listen See live tcp connections excluding ones that are listening tcpdump -w _filename_.pcap Capture a .pcap dump of local traffic. ssh -L _remote_port_:_localhost_:_localport_ _user_@_ip/hostname_ Reverse port, like port forwarding. df -h See diskspace. -h makes it human readable. top Check ressource usage. Press 1 to see per core usage. cat /etc/*release Check distro. Windows Tips win + ctrl + b restarts the graphics driver on windows. Commands CMD Command Description psftp _putty_sessions_name_ then put _filename_ REQUIRES PUTTY. Opens a psftp shell and put means to transfer the file through the putty session. netstat -an | find /i &quot;port|listening|esbalished|etc&quot; Like netstat in linux. Find specifies what you are looking for. -i makes in case insesitive. Powershell Nothing to see here… yet!</summary></entry><entry><title type="html">How to use tips and tricks</title><link href="http://localhost:4000/how-to/2019/11/11/How-to-use-site.html" rel="alternate" type="text/html" title="How to use tips and tricks" /><published>2019-11-11T10:22:00+01:00</published><updated>2019-11-11T10:22:00+01:00</updated><id>http://localhost:4000/how-to/2019/11/11/How-to-use-site</id><content type="html" xml:base="http://localhost:4000/how-to/2019/11/11/How-to-use-site.html">&lt;h1 id=&quot;how-to-use-tips-and-tricks&quot;&gt;How to use Tips and Tricks&lt;/h1&gt;
&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;
&lt;p&gt;This post will deal in particular to setting up a test environment, as well as how to create posts and what to do with them.&lt;/p&gt;

&lt;p&gt;This is done in Ubuntu and in the Linux subsystem on Windows.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-the-test-environment&quot;&gt;Setting up the test environment&lt;/h2&gt;
&lt;p&gt;Following &lt;a href=&quot;https://michelleful.github.io/code-blog//2014/02/28/setting-up-a-jekyll-blog-on-github-pages/&quot;&gt;this guide&lt;/a&gt; will get you most of the way.&lt;/p&gt;

&lt;h3 id=&quot;issues&quot;&gt;Issues&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;When running the &lt;code class=&quot;highlighter-rouge&quot;&gt;bundler installer&lt;/code&gt; sometimes not all the gems are installed. After looking for a fix, Jekyll’s own website provided me with a command to fix the remaining dependencies.
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/ubuntu/&quot;&gt;This page&lt;/a&gt; provides the fix. run &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install ruby-full build-essential zlib1g-dev&lt;/code&gt; for fixing the dependencies. Then run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundler installer again.&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Running the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new .&lt;/code&gt; command creates a conflict because the directory contains the Gemfile and Gemfile.lock. to mitigate, follow what the output of the command suggests and run the command with the &lt;code class=&quot;highlighter-rouge&quot;&gt;--force&lt;/code&gt; tag. &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new . --force&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From here on, following the instructions will work just fine.&lt;/p&gt;

&lt;h3 id=&quot;useful-commands&quot;&gt;Useful commands:&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve --baseurl '' --watch&lt;/code&gt;  | Serving the website on localhost:4000&lt;/p&gt;</content><author><name></name></author><summary type="html">How to use Tips and Tricks Preface This post will deal in particular to setting up a test environment, as well as how to create posts and what to do with them. This is done in Ubuntu and in the Linux subsystem on Windows. Setting up the test environment Following this guide will get you most of the way. Issues When running the bundler installer sometimes not all the gems are installed. After looking for a fix, Jekyll’s own website provided me with a command to fix the remaining dependencies. This page provides the fix. run sudo apt-get install ruby-full build-essential zlib1g-dev for fixing the dependencies. Then run bundler installer again. Running the jekyll new . command creates a conflict because the directory contains the Gemfile and Gemfile.lock. to mitigate, follow what the output of the command suggests and run the command with the --force tag. jekyll new . --force From here on, following the instructions will work just fine. Useful commands: bundle exec jekyll serve --baseurl '' --watch | Serving the website on localhost:4000</summary></entry></feed>